{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-app/rams-webapp/src/lib/supabase.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr'\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n\r\nexport const supabase = createBrowserClient(supabaseUrl, supabaseAnonKey)"],"names":[],"mappings":";;;AAAA;AAAA;;AAEA,MAAM;AACN,MAAM;AAEC,MAAM,WAAW,CAAA,GAAA,0KAAA,CAAA,sBAAmB,AAAD,EAAE,aAAa","debugId":null}},
    {"offset": {"line": 118, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-app/rams-webapp/src/lib/utils.ts"],"sourcesContent":["import { type ClassValue, clsx } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,2JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,qIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 134, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-app/rams-webapp/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\r\n  variant?: 'default' | 'outline' | 'ghost'\r\n  size?: 'default' | 'sm' | 'lg'\r\n}\r\n\r\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\r\n  ({ className, variant = 'default', size = 'default', ...props }, ref) => {\r\n    const baseClasses = \"inline-flex items-center justify-center whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50\"\r\n    \r\n    const variants = {\r\n      default: \"bg-blue-600 text-white shadow hover:bg-blue-700\",\r\n      outline: \"border border-gray-300 bg-white shadow-sm hover:bg-gray-50\",\r\n      ghost: \"hover:bg-gray-100\"\r\n    }\r\n    \r\n    const sizes = {\r\n      default: \"h-9 px-4 py-2\",\r\n      sm: \"h-8 rounded-md px-3 text-xs\",\r\n      lg: \"h-10 rounded-md px-8\"\r\n    }\r\n\r\n    return (\r\n      <button\r\n        className={cn(baseClasses, variants[variant], sizes[size], className)}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nButton.displayName = \"Button\"\r\n\r\nexport { Button }"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAOA,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,UAAU,SAAS,EAAE,OAAO,SAAS,EAAE,GAAG,OAAO,EAAE;IAC/D,MAAM,cAAc;IAEpB,MAAM,WAAW;QACf,SAAS;QACT,SAAS;QACT,OAAO;IACT;IAEA,MAAM,QAAQ;QACZ,SAAS;QACT,IAAI;QACJ,IAAI;IACN;IAEA,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,aAAa,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,KAAK,EAAE;QAC3D,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 173, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-app/rams-webapp/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"rounded-xl border border-gray-200 bg-white text-gray-950 shadow\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<HTMLHeadingElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <h3\r\n      ref={ref}\r\n      className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<HTMLParagraphElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <p\r\n      ref={ref}\r\n      className={cn(\"text-sm text-gray-500\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n  )\r\n)\r\nCardContent.displayName = \"CardContent\"\r\n\r\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;;AAIA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mEACA;QAED,GAAG,KAAK;;;;;;AAIf,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAChC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAIf,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAIf,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAGlE,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 243, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-app/rams-webapp/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-gray-300 bg-white px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-blue-500 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-app/rams-webapp/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <label\r\n      ref={ref}\r\n      className={cn(\r\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nLabel.displayName = \"Label\"\r\n\r\nexport { Label }"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAIA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAIf,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 298, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-app/rams-webapp/app/dashboard/rams/%5Bid%5D/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState, useRef, use } from 'react'\r\nimport { supabase } from '@/lib/supabase'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Label } from '@/components/ui/label'\r\nimport { ArrowLeft, FileText, Calendar, Building, Pen, Check } from 'lucide-react'\r\n\r\ninterface RamsDocument {\r\n  id: string\r\n  title: string\r\n  description: string\r\n  file_path: string\r\n  deadline: string | null\r\n  created_at: string\r\n  projects: { name: string } | null\r\n}\r\n\r\nconst signatureStyles = [\r\n  { className: 'font-serif italic text-blue-900', name: 'Classic Script' },\r\n  { className: 'font-bold text-gray-800', name: 'Bold Print' },\r\n  { className: 'font-mono text-green-800', name: 'Modern' },\r\n  { className: 'font-cursive text-purple-800', name: 'Elegant' }\r\n]\r\n\r\nexport default function ViewRamsPage({ params }: { params: Promise<{ id: string }> }) {\r\n  const resolvedParams = use(params)\r\n  const [document, setDocument] = useState<RamsDocument | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n  const [pdfUrl, setPdfUrl] = useState<string | null>(null)\r\n  const [showSignatureModal, setShowSignatureModal] = useState(false)\r\n  const [signatureName, setSignatureName] = useState('')\r\n  const [signing, setSigning] = useState(false)\r\n  const [hasSigned, setHasSigned] = useState(false)\r\n  \r\n  // Enhanced signature states\r\n  const [signatureType, setSignatureType] = useState<'type' | 'draw' | 'style'>('type')\r\n  const [selectedStyle, setSelectedStyle] = useState(0)\r\n  const [isDrawing, setIsDrawing] = useState(false)\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n\r\n  useEffect(() => {\r\n    loadDocument()\r\n  }, [resolvedParams.id])\r\n\r\n  const checkSignatureStatus = async () => {\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    \r\n    if (user) {\r\n      const { data } = await supabase\r\n        .from('rams_signatures')\r\n        .select('id')\r\n        .eq('rams_document_id', resolvedParams.id)\r\n        .eq('user_id', user.id)\r\n        .single()\r\n      \r\n      setHasSigned(!!data)\r\n    }\r\n  }\r\n\r\n  const loadDocument = async () => {\r\n    const { data } = await supabase\r\n      .from('rams_documents')\r\n      .select(`\r\n        *,\r\n        projects (name)\r\n      `)\r\n      .eq('id', resolvedParams.id)\r\n      .single()\r\n\r\n    if (data) {\r\n      setDocument(data)\r\n      \r\n      // Get PDF URL\r\n      if (data.file_path !== 'placeholder.pdf') {\r\n        const { data: urlData } = supabase.storage\r\n          .from('rams-documents')\r\n          .getPublicUrl(data.file_path)\r\n        \r\n        setPdfUrl(urlData.publicUrl)\r\n      }\r\n      \r\n      // Check signature status\r\n      await checkSignatureStatus()\r\n    }\r\n    \r\n    setLoading(false)\r\n  }\r\n\r\n  // Canvas drawing functions\r\n  const startDrawing = (e: React.MouseEvent<HTMLCanvasElement>) => {\r\n    setIsDrawing(true)\r\n    const canvas = canvasRef.current\r\n    if (canvas) {\r\n      const rect = canvas.getBoundingClientRect()\r\n      const ctx = canvas.getContext('2d')\r\n      if (ctx) {\r\n        ctx.beginPath()\r\n        ctx.moveTo(e.clientX - rect.left, e.clientY - rect.top)\r\n      }\r\n    }\r\n  }\r\n\r\n  const draw = (e: React.MouseEvent<HTMLCanvasElement>) => {\r\n    if (!isDrawing) return\r\n    const canvas = canvasRef.current\r\n    if (canvas) {\r\n      const rect = canvas.getBoundingClientRect()\r\n      const ctx = canvas.getContext('2d')\r\n      if (ctx) {\r\n        ctx.lineWidth = 2\r\n        ctx.lineCap = 'round'\r\n        ctx.strokeStyle = '#000'\r\n        ctx.lineTo(e.clientX - rect.left, e.clientY - rect.top)\r\n        ctx.stroke()\r\n      }\r\n    }\r\n  }\r\n\r\n  const stopDrawing = () => {\r\n    setIsDrawing(false)\r\n  }\r\n\r\n  const handleTouchStart = (e: React.TouchEvent<HTMLCanvasElement>) => {\r\n    e.preventDefault()\r\n    const touch = e.touches[0]\r\n    const canvas = canvasRef.current\r\n    if (canvas) {\r\n      const rect = canvas.getBoundingClientRect()\r\n      const ctx = canvas.getContext('2d')\r\n      if (ctx) {\r\n        setIsDrawing(true)\r\n        ctx.beginPath()\r\n        ctx.moveTo(touch.clientX - rect.left, touch.clientY - rect.top)\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleTouchMove = (e: React.TouchEvent<HTMLCanvasElement>) => {\r\n    e.preventDefault()\r\n    if (!isDrawing) return\r\n    const touch = e.touches[0]\r\n    const canvas = canvasRef.current\r\n    if (canvas) {\r\n      const rect = canvas.getBoundingClientRect()\r\n      const ctx = canvas.getContext('2d')\r\n      if (ctx) {\r\n        ctx.lineWidth = 2\r\n        ctx.lineCap = 'round'\r\n        ctx.strokeStyle = '#000'\r\n        ctx.lineTo(touch.clientX - rect.left, touch.clientY - rect.top)\r\n        ctx.stroke()\r\n      }\r\n    }\r\n  }\r\n\r\n  const clearCanvas = () => {\r\n    const canvas = canvasRef.current\r\n    if (canvas) {\r\n      const ctx = canvas.getContext('2d')\r\n      if (ctx) {\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height)\r\n      }\r\n    }\r\n  }\r\n\r\n  const isSignatureReady = () => {\r\n    if (signatureType === 'type' || signatureType === 'style') {\r\n      return signatureName.trim().length > 0\r\n    }\r\n    if (signatureType === 'draw') {\r\n      const canvas = canvasRef.current\r\n      if (canvas) {\r\n        const ctx = canvas.getContext('2d')\r\n        if (ctx) {\r\n          const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height)\r\n          return imageData.data.some(channel => channel !== 0)\r\n        }\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  const handleEnhancedSign = async () => {\r\n    if (!isSignatureReady()) {\r\n      alert('Please provide a signature')\r\n      return\r\n    }\r\n    \r\n    setSigning(true)\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    \r\n    if (user) {\r\n      let signatureData = ''\r\n      \r\n      if (signatureType === 'type') {\r\n        signatureData = `typed:${signatureName}`\r\n      } else if (signatureType === 'style') {\r\n        signatureData = `style:${signatureName}:${selectedStyle}`\r\n      } else if (signatureType === 'draw') {\r\n        const canvas = canvasRef.current\r\n        if (canvas) {\r\n          signatureData = `drawn:${canvas.toDataURL()}`\r\n        }\r\n      }\r\n\r\n      const { error } = await supabase\r\n        .from('rams_signatures')\r\n        .insert([\r\n          {\r\n            rams_document_id: resolvedParams.id,\r\n            user_id: user.id,\r\n            signature_data: signatureData,\r\n            ip_address: 'browser'\r\n          }\r\n        ])\r\n      \r\n      if (!error) {\r\n        setHasSigned(true)\r\n        setShowSignatureModal(false)\r\n        setSignatureName('')\r\n        setSelectedStyle(0)\r\n        clearCanvas()\r\n        alert('Document signed successfully!')\r\n      } else {\r\n        alert('Error signing document: ' + error.message)\r\n      }\r\n    }\r\n    \r\n    setSigning(false)\r\n  }\r\n\r\n  if (loading) {\r\n    return <div className=\"p-6\">Loading document...</div>\r\n  }\r\n\r\n  if (!document) {\r\n    return <div className=\"p-6\">Document not found</div>\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50\">\r\n      {/* Header */}\r\n      <div className=\"bg-white shadow-sm border-b border-gray-200 px-6 py-4\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-4\">\r\n            <Button \r\n              variant=\"outline\" \r\n              onClick={() => window.history.back()}\r\n              className=\"flex items-center space-x-2\"\r\n            >\r\n              <ArrowLeft className=\"w-4 h-4\" />\r\n              <span>Back</span>\r\n            </Button>\r\n            <div>\r\n              <h1 className=\"text-2xl font-semibold text-gray-800\">{document.title}</h1>\r\n              <p className=\"text-gray-600\">{document.description}</p>\r\n            </div>\r\n          </div>\r\n          <Button \r\n            className={hasSigned ? \"bg-green-600 hover:bg-green-700\" : \"bg-blue-600 hover:bg-blue-700\"}\r\n            onClick={() => hasSigned ? null : setShowSignatureModal(true)}\r\n            disabled={hasSigned}\r\n          >\r\n            {hasSigned ? (\r\n              <>\r\n                <Check className=\"w-4 h-4 mr-2\" />\r\n                Signed\r\n              </>\r\n            ) : (\r\n              <>\r\n                <Pen className=\"w-4 h-4 mr-2\" />\r\n                Sign Document\r\n              </>\r\n            )}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"flex\">\r\n        {/* Document Info Sidebar */}\r\n        <div className=\"w-80 bg-white shadow-sm p-6\">\r\n          <Card>\r\n            <CardHeader>\r\n              <CardTitle className=\"flex items-center space-x-2\">\r\n                <FileText className=\"w-5 h-5 text-blue-600\" />\r\n                <span>Document Information</span>\r\n              </CardTitle>\r\n            </CardHeader>\r\n            <CardContent className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"text-sm font-medium text-gray-600\">Project</label>\r\n                <div className=\"flex items-center space-x-2 mt-1\">\r\n                  <Building className=\"w-4 h-4 text-gray-400\" />\r\n                  <span className=\"text-gray-800\">{document.projects?.name || 'Unknown'}</span>\r\n                </div>\r\n              </div>\r\n              \r\n              {document.deadline && (\r\n                <div>\r\n                  <label className=\"text-sm font-medium text-gray-600\">Deadline</label>\r\n                  <div className=\"flex items-center space-x-2 mt-1\">\r\n                    <Calendar className=\"w-4 h-4 text-gray-400\" />\r\n                    <span className=\"text-gray-800\">\r\n                      {new Date(document.deadline).toLocaleDateString()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              <div>\r\n                <label className=\"text-sm font-medium text-gray-600\">Created</label>\r\n                <p className=\"text-gray-800 mt-1\">\r\n                  {new Date(document.created_at).toLocaleDateString()}\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"pt-4 border-t\">\r\n                <h3 className=\"font-medium text-gray-800 mb-2\">Signature Status</h3>\r\n                {hasSigned ? (\r\n                  <div className=\"bg-green-50 border border-green-200 rounded-md p-3\">\r\n                    <p className=\"text-sm text-green-800\">\r\n                      <strong>Signed:</strong> You have signed this document\r\n                    </p>\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"bg-yellow-50 border border-yellow-200 rounded-md p-3\">\r\n                    <p className=\"text-sm text-yellow-800\">\r\n                      <strong>Pending:</strong> You haven't signed this document yet\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n\r\n        {/* PDF Viewer */}\r\n        <div className=\"flex-1 p-6\">\r\n          <Card className=\"h-full\">\r\n            <CardContent className=\"p-0 h-full\">\r\n              {pdfUrl ? (\r\n                <iframe\r\n                  src={pdfUrl}\r\n                  className=\"w-full h-full min-h-[800px] border-0\"\r\n                  title=\"RAMS Document\"\r\n                />\r\n              ) : (\r\n                <div className=\"flex items-center justify-center h-96\">\r\n                  <div className=\"text-center\">\r\n                    <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No PDF Available</h3>\r\n                    <p className=\"text-gray-600\">This document doesn't have a PDF file attached</p>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Enhanced Signature Modal */}\r\n      {showSignatureModal && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <Card className=\"w-[600px] max-h-[80vh] overflow-y-auto\">\r\n            <CardHeader>\r\n              <CardTitle>Sign Document</CardTitle>\r\n              <CardDescription>\r\n                By signing this document, you confirm that you have read and understood the RAMS requirements.\r\n              </CardDescription>\r\n            </CardHeader>\r\n            <CardContent>\r\n              <div className=\"space-y-6\">\r\n                {/* Signature Type Tabs */}\r\n                <div className=\"flex space-x-1 bg-gray-100 p-1 rounded-lg\">\r\n                  <button\r\n                    className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\r\n                      signatureType === 'type' \r\n                        ? 'bg-white text-gray-900 shadow-sm' \r\n                        : 'text-gray-600 hover:text-gray-900'\r\n                    }`}\r\n                    onClick={() => setSignatureType('type')}\r\n                  >\r\n                    Type Name\r\n                  </button>\r\n                  <button\r\n                    className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\r\n                      signatureType === 'draw' \r\n                        ? 'bg-white text-gray-900 shadow-sm' \r\n                        : 'text-gray-600 hover:text-gray-900'\r\n                    }`}\r\n                    onClick={() => setSignatureType('draw')}\r\n                  >\r\n                    Draw Signature\r\n                  </button>\r\n                  <button\r\n                    className={`flex-1 py-2 px-4 rounded-md text-sm font-medium transition-colors ${\r\n                      signatureType === 'style' \r\n                        ? 'bg-white text-gray-900 shadow-sm' \r\n                        : 'text-gray-600 hover:text-gray-900'\r\n                    }`}\r\n                    onClick={() => setSignatureType('style')}\r\n                  >\r\n                    Signature Styles\r\n                  </button>\r\n                </div>\r\n\r\n                {/* Type Name Option */}\r\n                {signatureType === 'type' && (\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <Label htmlFor=\"signature\">Enter your full name:</Label>\r\n                      <Input\r\n                        id=\"signature\"\r\n                        value={signatureName}\r\n                        onChange={(e) => setSignatureName(e.target.value)}\r\n                        placeholder=\"Your full name\"\r\n                        className=\"mt-1 text-lg\"\r\n                      />\r\n                    </div>\r\n                    {signatureName && (\r\n                      <div className=\"border rounded-lg p-4 bg-gray-50\">\r\n                        <p className=\"text-sm text-gray-600 mb-2\">Preview:</p>\r\n                        <div className=\"text-2xl font-cursive border-b-2 border-gray-800 inline-block pb-1\">\r\n                          {signatureName}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Draw Signature Option */}\r\n                {signatureType === 'draw' && (\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <Label>Draw your signature:</Label>\r\n                      <div className=\"mt-2 border-2 border-dashed border-gray-300 rounded-lg\">\r\n                        <canvas\r\n                          ref={canvasRef}\r\n                          width={500}\r\n                          height={200}\r\n                          className=\"w-full h-48 cursor-crosshair\"\r\n                          onMouseDown={startDrawing}\r\n                          onMouseMove={draw}\r\n                          onMouseUp={stopDrawing}\r\n                          onMouseLeave={stopDrawing}\r\n                          onTouchStart={handleTouchStart}\r\n                          onTouchMove={handleTouchMove}\r\n                          onTouchEnd={stopDrawing}\r\n                        />\r\n                      </div>\r\n                      <div className=\"flex justify-between mt-2\">\r\n                        <p className=\"text-sm text-gray-600\">\r\n                          Sign above using your mouse or touch screen\r\n                        </p>\r\n                        <Button\r\n                          type=\"button\"\r\n                          variant=\"outline\"\r\n                          size=\"sm\"\r\n                          onClick={clearCanvas}\r\n                        >\r\n                          Clear\r\n                        </Button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )}\r\n\r\n                {/* Signature Styles Option */}\r\n                {signatureType === 'style' && (\r\n                  <div className=\"space-y-4\">\r\n                    <div>\r\n                      <Label htmlFor=\"styleName\">Enter your name:</Label>\r\n                      <Input\r\n                        id=\"styleName\"\r\n                        value={signatureName}\r\n                        onChange={(e) => setSignatureName(e.target.value)}\r\n                        placeholder=\"Your full name\"\r\n                        className=\"mt-1\"\r\n                      />\r\n                    </div>\r\n                    {signatureName && (\r\n                      <div className=\"space-y-3\">\r\n                        <Label>Choose a signature style:</Label>\r\n                        <div className=\"grid grid-cols-1 gap-3\">\r\n                          {signatureStyles.map((style, index) => (\r\n                            <div\r\n                              key={index}\r\n                              className={`border-2 rounded-lg p-4 cursor-pointer transition-colors ${\r\n                                selectedStyle === index\r\n                                  ? 'border-blue-500 bg-blue-50'\r\n                                  : 'border-gray-200 hover:border-gray-300'\r\n                              }`}\r\n                              onClick={() => setSelectedStyle(index)}\r\n                            >\r\n                              <div className={`text-2xl ${style.className}`}>\r\n                                {signatureName}\r\n                              </div>\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                )}\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"flex space-x-4 pt-4 border-t\">\r\n                  <Button \r\n                    onClick={handleEnhancedSign}\r\n                    disabled={signing || !isSignatureReady()}\r\n                    className=\"flex-1\"\r\n                  >\r\n                    {signing ? 'Signing...' : 'Sign Document'}\r\n                  </Button>\r\n                  <Button \r\n                    variant=\"outline\"\r\n                    onClick={() => {\r\n                      setShowSignatureModal(false)\r\n                      clearCanvas()\r\n                      setSignatureName('')\r\n                      setSelectedStyle(0)\r\n                    }}\r\n                    className=\"flex-1\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}