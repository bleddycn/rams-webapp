{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-webapp/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface CardProps extends React.HTMLAttributes<HTMLDivElement> {}\r\n\r\nconst Card = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\r\n        \"rounded-xl border border-gray-200 bg-white text-gray-950 shadow\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCard.displayName = \"Card\"\r\n\r\nconst CardHeader = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <div\r\n      ref={ref}\r\n      className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCardHeader.displayName = \"CardHeader\"\r\n\r\nconst CardTitle = React.forwardRef<HTMLHeadingElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <h3\r\n      ref={ref}\r\n      className={cn(\"font-semibold leading-none tracking-tight\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCardTitle.displayName = \"CardTitle\"\r\n\r\nconst CardDescription = React.forwardRef<HTMLParagraphElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <p\r\n      ref={ref}\r\n      className={cn(\"text-sm text-gray-500\", className)}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nCardDescription.displayName = \"CardDescription\"\r\n\r\nconst CardContent = React.forwardRef<HTMLDivElement, CardProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\r\n  )\r\n)\r\nCardContent.displayName = \"CardContent\"\r\n\r\nexport { Card, CardHeader, CardTitle, CardDescription, CardContent }"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;;AAIA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,mEACA;QAED,GAAG,KAAK;;;;;;AAIf,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAChC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAIf,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,6CAA6C;QAC1D,GAAG,KAAK;;;;;;AAIf,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,yBAAyB;QACtC,GAAG,KAAK;;;;;;AAIf,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EACjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAGlE,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 77, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-webapp/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\nexport interface InputProps\r\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\r\n\r\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\r\n  ({ className, type, ...props }, ref) => {\r\n    return (\r\n      <input\r\n        type={type}\r\n        className={cn(\r\n          \"flex h-9 w-full rounded-md border border-gray-300 bg-white px-3 py-1 text-sm shadow-sm transition-colors file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-gray-500 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-blue-500 disabled:cursor-not-allowed disabled:opacity-50\",\r\n          className\r\n        )}\r\n        ref={ref}\r\n        {...props}\r\n      />\r\n    )\r\n  }\r\n)\r\nInput.displayName = \"Input\"\r\n\r\nexport { Input }"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAKA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kUACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 106, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-webapp/src/components/ui/label.tsx"],"sourcesContent":["import * as React from \"react\"\r\nimport { cn } from \"@/lib/utils\"\r\n\r\ninterface LabelProps extends React.LabelHTMLAttributes<HTMLLabelElement> {}\r\n\r\nconst Label = React.forwardRef<HTMLLabelElement, LabelProps>(\r\n  ({ className, ...props }, ref) => (\r\n    <label\r\n      ref={ref}\r\n      className={cn(\r\n        \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\r\n        className\r\n      )}\r\n      {...props}\r\n    />\r\n  )\r\n)\r\nLabel.displayName = \"Label\"\r\n\r\nexport { Label }"],"names":[],"mappings":";;;;AAAA;AACA;;;;AAIA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBACxB,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,8FACA;QAED,GAAG,KAAK;;;;;;AAIf,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///C:/projects/rams-webapp/app/dashboard/page.tsx"],"sourcesContent":["'use client'\r\n\r\nimport { useEffect, useState } from 'react'\r\nimport { supabase } from '@/lib/supabase'\r\nimport { Button } from '@/components/ui/button'\r\nimport { Card, CardContent } from '@/components/ui/card'\r\nimport { Input } from '@/components/ui/input'\r\nimport { Label } from '@/components/ui/label'\r\nimport { \r\n  Plus, \r\n  Search, \r\n  ChevronDown, \r\n  ChevronLeft, \r\n  ChevronRight, \r\n  MoreHorizontal,\r\n  User,\r\n  Mail,\r\n  Shield,\r\n  Calendar,\r\n  UserCheck,\r\n  UserX,\r\n  ChevronRight as ChevronRightIcon\r\n} from 'lucide-react'\r\n\r\ninterface UserProfile {\r\n  id: string\r\n  email: string\r\n  full_name?: string\r\n  role: 'admin' | 'worker'\r\n  created_at: string\r\n  updated_at: string\r\n}\r\n\r\nexport default function UsersPage() {\r\n  const [users, setUsers] = useState<UserProfile[]>([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [showCreateForm, setShowCreateForm] = useState(false)\r\n  const [searchTerm, setSearchTerm] = useState('')\r\n  const [roleFilter, setRoleFilter] = useState<'all' | 'admin' | 'worker'>('all')\r\n  const [newUser, setNewUser] = useState({\r\n    email: '',\r\n    full_name: '',\r\n    role: 'worker' as 'admin' | 'worker',\r\n    password: ''\r\n  })\r\n  const [creating, setCreating] = useState(false)\r\n  const [currentUser, setCurrentUser] = useState<UserProfile | null>(null)\r\n\r\n  useEffect(() => {\r\n    loadData()\r\n  }, [])\r\n\r\n  const loadData = async () => {\r\n    // Get current user to check permissions\r\n    const { data: { user } } = await supabase.auth.getUser()\r\n    \r\n    if (user) {\r\n      const { data: profile } = await supabase\r\n        .from('profiles')\r\n        .select('*')\r\n        .eq('id', user.id)\r\n        .single()\r\n      \r\n      setCurrentUser(profile)\r\n\r\n      // Load all users (only admins should see this page)\r\n      if (profile?.role === 'admin') {\r\n        const { data: usersData } = await supabase\r\n          .from('profiles')\r\n          .select('*')\r\n          .order('created_at', { ascending: false })\r\n\r\n        setUsers(usersData || [])\r\n      }\r\n    }\r\n    \r\n    setLoading(false)\r\n  }\r\n\r\n  const createUser = async (e: React.FormEvent) => {\r\n    e.preventDefault()\r\n    setCreating(true)\r\n\r\n    try {\r\n      // Create auth user\r\n      const { data: authData, error: authError } = await supabase.auth.admin.createUser({\r\n        email: newUser.email,\r\n        password: newUser.password,\r\n        email_confirm: true\r\n      })\r\n\r\n      if (authError) {\r\n        alert('Error creating user: ' + authError.message)\r\n        setCreating(false)\r\n        return\r\n      }\r\n\r\n      // Update profile with additional info\r\n      if (authData.user) {\r\n        const { error: profileError } = await supabase\r\n          .from('profiles')\r\n          .upsert([\r\n            {\r\n              id: authData.user.id,\r\n              email: newUser.email,\r\n              full_name: newUser.full_name,\r\n              role: newUser.role\r\n            }\r\n          ])\r\n\r\n        if (profileError) {\r\n          alert('Error updating profile: ' + profileError.message)\r\n        } else {\r\n          setNewUser({ email: '', full_name: '', role: 'worker', password: '' })\r\n          setShowCreateForm(false)\r\n          loadData()\r\n        }\r\n      }\r\n    } catch (error) {\r\n      alert('Error creating user: ' + (error as Error).message)\r\n    }\r\n    \r\n    setCreating(false)\r\n  }\r\n\r\n  const updateUserRole = async (userId: string, newRole: 'admin' | 'worker') => {\r\n    const { error } = await supabase\r\n      .from('profiles')\r\n      .update({ role: newRole })\r\n      .eq('id', userId)\r\n\r\n    if (!error) {\r\n      loadData()\r\n    } else {\r\n      alert('Error updating user role: ' + error.message)\r\n    }\r\n  }\r\n\r\n  const deleteUser = async (userId: string) => {\r\n    if (confirm('Are you sure you want to delete this user? This action cannot be undone.')) {\r\n      // Delete from profiles first\r\n      const { error: profileError } = await supabase\r\n        .from('profiles')\r\n        .delete()\r\n        .eq('id', userId)\r\n\r\n      if (!profileError) {\r\n        // Delete auth user\r\n        const { error: authError } = await supabase.auth.admin.deleteUser(userId)\r\n        \r\n        if (!authError) {\r\n          loadData()\r\n        } else {\r\n          alert('Error deleting user from auth: ' + authError.message)\r\n        }\r\n      } else {\r\n        alert('Error deleting user profile: ' + profileError.message)\r\n      }\r\n    }\r\n  }\r\n\r\n  const filteredUsers = users.filter(user => {\r\n    const matchesSearch = user.full_name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n                         user.email.toLowerCase().includes(searchTerm.toLowerCase())\r\n    const matchesRole = roleFilter === 'all' || user.role === roleFilter\r\n    return matchesSearch && matchesRole\r\n  })\r\n\r\n  if (loading) {\r\n    return <div className=\"p-8\">Loading users...</div>\r\n  }\r\n\r\n  // Only admins should see this page\r\n  if (currentUser?.role !== 'admin') {\r\n    return (\r\n      <div className=\"p-8 max-w-7xl mx-auto\">\r\n        <div className=\"text-center py-12\">\r\n          <div className=\"w-12 h-12 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n            <UserX className=\"w-6 h-6 text-red-400\" />\r\n          </div>\r\n          <h3 className=\"text-lg font-medium text-gray-900 mb-2\">Access Denied</h3>\r\n          <p className=\"text-gray-500\">You don't have permission to view this page.</p>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"p-8 max-w-7xl mx-auto\">\r\n      {/* Header */}\r\n      <div className=\"mb-8\">\r\n        <h1 className=\"text-2xl font-semibold text-gray-900 mb-2\">User Management</h1>\r\n        <div className=\"flex items-center text-sm text-gray-500\">\r\n          <span>Home</span>\r\n          <ChevronRightIcon className=\"w-4 h-4 mx-2\" />\r\n          <span>User Management</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Create Form Modal */}\r\n      {showCreateForm && (\r\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n          <Card className=\"w-full max-w-lg mx-4\">\r\n            <CardContent className=\"p-6\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Create New User</h3>\r\n              <form onSubmit={createUser} className=\"space-y-4\">\r\n                <div>\r\n                  <Label htmlFor=\"email\" className=\"text-sm font-medium text-gray-700\">Email Address</Label>\r\n                  <Input\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    value={newUser.email}\r\n                    onChange={(e) => setNewUser({ ...newUser, email: e.target.value })}\r\n                    placeholder=\"Enter email address\"\r\n                    required\r\n                    className=\"mt-1\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <Label htmlFor=\"full_name\" className=\"text-sm font-medium text-gray-700\">Full Name</Label>\r\n                  <Input\r\n                    id=\"full_name\"\r\n                    value={newUser.full_name}\r\n                    onChange={(e) => setNewUser({ ...newUser, full_name: e.target.value })}\r\n                    placeholder=\"Enter full name\"\r\n                    className=\"mt-1\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <Label htmlFor=\"password\" className=\"text-sm font-medium text-gray-700\">Password</Label>\r\n                  <Input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    value={newUser.password}\r\n                    onChange={(e) => setNewUser({ ...newUser, password: e.target.value })}\r\n                    placeholder=\"Enter password\"\r\n                    required\r\n                    className=\"mt-1\"\r\n                    minLength={6}\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <Label htmlFor=\"role\" className=\"text-sm font-medium text-gray-700\">Role</Label>\r\n                  <select\r\n                    id=\"role\"\r\n                    value={newUser.role}\r\n                    onChange={(e) => setNewUser({ ...newUser, role: e.target.value as 'admin' | 'worker' })}\r\n                    className=\"mt-1 block w-full rounded-md border border-gray-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                    required\r\n                  >\r\n                    <option value=\"worker\">Worker</option>\r\n                    <option value=\"admin\">Admin</option>\r\n                  </select>\r\n                </div>\r\n                \r\n                <div className=\"flex space-x-3 pt-4\">\r\n                  <Button \r\n                    type=\"submit\" \r\n                    disabled={creating}\r\n                    className=\"flex-1 bg-blue-600 hover:bg-blue-700 text-white\"\r\n                  >\r\n                    {creating ? 'Creating...' : 'Create User'}\r\n                  </Button>\r\n                  <Button \r\n                    type=\"button\" \r\n                    variant=\"outline\" \r\n                    onClick={() => setShowCreateForm(false)}\r\n                    className=\"flex-1\"\r\n                  >\r\n                    Cancel\r\n                  </Button>\r\n                </div>\r\n              </form>\r\n            </CardContent>\r\n          </Card>\r\n        </div>\r\n      )}\r\n\r\n      {/* Controls Bar */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between gap-4 mb-6\">\r\n        <div className=\"flex flex-col sm:flex-row gap-4\">\r\n          {/* Search */}\r\n          <div className=\"relative\">\r\n            <Search className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400 w-4 h-4\" />\r\n            <Input\r\n              placeholder=\"Search users\"\r\n              value={searchTerm}\r\n              onChange={(e) => setSearchTerm(e.target.value)}\r\n              className=\"pl-10 w-64\"\r\n            />\r\n          </div>\r\n          \r\n          {/* Filters */}\r\n          <div className=\"flex gap-2\">\r\n            <select\r\n              value={roleFilter}\r\n              onChange={(e) => setRoleFilter(e.target.value as 'all' | 'admin' | 'worker')}\r\n              className=\"rounded-md border border-gray-300 bg-white px-3 py-2 text-sm focus:border-blue-500 focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n            >\r\n              <option value=\"all\">All roles</option>\r\n              <option value=\"admin\">Admins</option>\r\n              <option value=\"worker\">Workers</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Add User Button */}\r\n        <Button \r\n          onClick={() => setShowCreateForm(true)}\r\n          className=\"bg-blue-600 hover:bg-blue-700 text-white flex items-center gap-2\"\r\n        >\r\n          <Plus className=\"w-4 h-4\" />\r\n          Add User\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Table */}\r\n      <Card className=\"border border-gray-200\">\r\n        <CardContent className=\"p-0\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead>\r\n                <tr className=\"border-b border-gray-100 bg-gray-50\">\r\n                  <th className=\"text-left py-3 px-6 font-medium text-gray-600 text-sm\">\r\n                    User\r\n                  </th>\r\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-600 text-sm\">\r\n                    Role\r\n                  </th>\r\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-600 text-sm\">\r\n                    Email\r\n                  </th>\r\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-600 text-sm\">\r\n                    Joined\r\n                  </th>\r\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-600 text-sm\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"text-left py-3 px-4 font-medium text-gray-600 text-sm\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredUsers.map((user) => (\r\n                  <tr \r\n                    key={user.id} \r\n                    className=\"border-b border-gray-50 hover:bg-gray-25 transition-colors\"\r\n                  >\r\n                    <td className=\"py-4 px-6\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-8 h-8 bg-blue-100 rounded-full flex items-center justify-center text-blue-600 font-medium text-sm\">\r\n                          <User className=\"w-4 h-4\" />\r\n                        </div>\r\n                        <div>\r\n                          <div className=\"font-medium text-gray-900\">\r\n                            {user.full_name || 'No name provided'}\r\n                          </div>\r\n                          <div className=\"text-sm text-gray-500\">ID: {user.id.slice(0, 8)}...</div>\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-4 px-4\">\r\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${\r\n                        user.role === 'admin'\r\n                          ? 'bg-purple-100 text-purple-800'\r\n                          : 'bg-gray-100 text-gray-800'\r\n                      }`}>\r\n                        {user.role === 'admin' ? (\r\n                          <>\r\n                            <Shield className=\"w-3 h-3 mr-1\" />\r\n                            Admin\r\n                          </>\r\n                        ) : (\r\n                          <>\r\n                            <UserCheck className=\"w-3 h-3 mr-1\" />\r\n                            Worker\r\n                          </>\r\n                        )}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-4 px-4\">\r\n                      <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n                        <Mail className=\"w-4 h-4\" />\r\n                        <span>{user.email}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-4 px-4\">\r\n                      <div className=\"flex items-center space-x-2 text-sm text-gray-600\">\r\n                        <Calendar className=\"w-4 h-4\" />\r\n                        <span>{new Date(user.created_at).toLocaleDateString('en-US', {\r\n                          month: 'short',\r\n                          day: 'numeric',\r\n                          year: 'numeric'\r\n                        })}</span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"py-4 px-4\">\r\n                      <span className=\"inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-green-100 text-green-800\">\r\n                        ● Active\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"py-4 px-4\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {user.id !== currentUser?.id && (\r\n                          <>\r\n                            <select\r\n                              value={user.role}\r\n                              onChange={(e) => updateUserRole(user.id, e.target.value as 'admin' | 'worker')}\r\n                              className=\"text-xs border border-gray-300 rounded px-2 py-1 focus:outline-none focus:ring-1 focus:ring-blue-500\"\r\n                            >\r\n                              <option value=\"worker\">Worker</option>\r\n                              <option value=\"admin\">Admin</option>\r\n                            </select>\r\n                            <Button \r\n                              variant=\"ghost\" \r\n                              size=\"sm\" \r\n                              onClick={() => deleteUser(user.id)}\r\n                              className=\"h-8 px-2 text-red-500 hover:text-red-700 hover:bg-red-50\"\r\n                            >\r\n                              <UserX className=\"w-4 h-4\" />\r\n                            </Button>\r\n                          </>\r\n                        )}\r\n                        <Button variant=\"ghost\" size=\"sm\" className=\"h-8 w-8 p-0\">\r\n                          <MoreHorizontal className=\"w-4 h-4 text-gray-500\" />\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n\r\n          {/* Empty State */}\r\n          {filteredUsers.length === 0 && !loading && (\r\n            <div className=\"text-center py-12\">\r\n              <div className=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <User className=\"w-6 h-6 text-gray-400\" />\r\n              </div>\r\n              <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No users found</h3>\r\n              <p className=\"text-gray-500 mb-4\">\r\n                {searchTerm || roleFilter !== 'all' \r\n                  ? 'No users match your search criteria' \r\n                  : 'Create your first user to get started'\r\n                }\r\n              </p>\r\n              <Button \r\n                onClick={() => setShowCreateForm(true)}\r\n                className=\"bg-blue-600 hover:bg-blue-700 text-white\"\r\n              >\r\n                Create User\r\n              </Button>\r\n            </div>\r\n          )}\r\n\r\n          {/* Pagination */}\r\n          {filteredUsers.length > 0 && (\r\n            <div className=\"flex items-center justify-between px-6 py-4 border-t border-gray-100\">\r\n              <div className=\"flex items-center gap-2\">\r\n                <span className=\"text-sm text-gray-700\">Rows per page</span>\r\n                <Button variant=\"outline\" className=\"h-8 px-3 text-sm\">\r\n                  10\r\n                  <ChevronDown className=\"w-4 h-4 ml-1\" />\r\n                </Button>\r\n              </div>\r\n              \r\n              <div className=\"flex items-center gap-6\">\r\n                <span className=\"text-sm text-gray-600\">\r\n                  1 - {Math.min(10, filteredUsers.length)} of {filteredUsers.length}\r\n                </span>\r\n                \r\n                <div className=\"flex items-center gap-1\">\r\n                  <Button variant=\"outline\" size=\"sm\" className=\"h-8 w-8 p-0\">\r\n                    <ChevronLeft className=\"w-4 h-4\" />\r\n                  </Button>\r\n                  <Button variant=\"outline\" size=\"sm\" className=\"h-8 px-3 bg-blue-600 text-white\">\r\n                    1\r\n                  </Button>\r\n                  <Button variant=\"outline\" size=\"sm\" className=\"h-8 w-8 p-0\">\r\n                    <ChevronRight className=\"w-4 h-4\" />\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}